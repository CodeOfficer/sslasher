#!/usr/bin/env ruby -wKU

# require "fileutils"

	HOME_DIR			= "#{ `echo $HOME` }".strip
	SSL_DIR				= "#{ HOME_DIR }/.ssl"
	HOME_CSR_FILE	= "#{ HOME_DIR }/.ssl/sslasher.csr"
	HOME_KEY_FILE	= "#{ HOME_DIR }/.ssl/sslasher.key"

	GEM_DIR				= File.expand_path("../..", __FILE__)
	GEM_CONF_FILE	= "#{ GEM_DIR }/lib/templates/sslasher.conf.erb"
	GEM_CSR_FILE 	= "#{ GEM_DIR }/lib/certificate/sslasher.csr"
	GEM_KEY_FILE 	= "#{ GEM_DIR }/lib/certificate/sslasher.key"

	RAILS_ROOT		= "#{ `pwd` }".strip
	CONFIG_FILE  	= "/tmp/sslasher.conf"
	PID_FILE  		= "#{ RAILS_ROOT }/tmp/pids/nginx.pid"

unless FileTest.exists?(HOME_CSR_FILE) && FileTest.exists?(HOME_KEY_FILE)
	FileUtils.mkdir_p SSL_DIR
	FileUtils.copy(GEM_CSR_FILE, HOME_CSR_FILE)
	FileUtils.copy(GEM_KEY_FILE, HOME_KEY_FILE)
end


args = ARGV.join(' ')
command  = "sudo nginx -c #{CONFIG_FILE} #{args}"

puts "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
	if FileTest.exists?(PID_FILE)
		command  = "#{command} -s stop"
		puts "Now quiting the server with:"
		puts
		puts "#{command}"

	else
		puts "Which port would you like NGINX to proxy to?"
		$stdout.write "->"
		asked_port = gets
		PROXY_PORT = asked_port.empty? ? '3000' : asked_port
		puts

		USER = "#{`id -un`}".strip
		GROUP = "#{`id -gn`}".strip
		CONFIG = "#{ `nginx -V 2>&1` }".strip
		NGINX_CONFIG_DIR = /--conf-path=(\S*)\/nginx.conf/.match(CONFIG)[1] || "/usr/local/etc/nginx"
		NGINX_MIME_FILE = "#{NGINX_CONFIG_DIR}/mime.types"

		file_out = File.open(CONFIG_FILE, "w") do |f|
			f.puts ERB.new(File.read(GEM_CONF_FILE)).result(binding)
		end

		puts "We need to give NGINX sudo access so it can bind to ports"
		puts "80 for HTTP and 443 for HTTPS. We'll then proxy both of those"
		puts "ports to your app server. Don't worry, it won't run as root."
		puts
		puts "Now starting the server with:"
		puts
		puts "#{command}"
	end
puts "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

`#{command}`
