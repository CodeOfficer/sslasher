#!/usr/bin/env ruby -wKU

ssl_csr_exists      = lambda { FileTest.exists?("#{ `echo $HOME` }".strip + "/.ssl/sslasher.csr") }
ssl_key_exists      = lambda { FileTest.exists?("#{ `echo $HOME` }".strip + "/.ssl/sslasher.key") }
nginx_config_exists = lambda { FileTest.exists?("#{ `pwd` }".strip + "/config/sslasher.conf") }

unless ssl_csr_exists && ssl_key_exists
	puts "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
	puts "We need to generate your self signed ssl certificate."
	puts "Execute the following command:"
	puts
	puts "*you can even leave the questions blank*"
	puts
	puts "openssl req -new -x509 -nodes -days 365 -keyout sslasher.key -out sslasher.csr"
	puts
	puts "When you are done you can launch sslasher again."
	puts "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
	exit 0
end

unless nginx_config_exists
	puts "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
	puts "We need to generate a NGINX config file for you"
	puts
	puts "Execute the following command:"
	puts
	puts "rails generate sslasher <proxy_port>"
	puts "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
	exit 0
end

puts "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
puts "We need to run NGINX with sudo access so it can bind to ports"
puts "80 for HTTP and 443 for HTTPS. We'll proxy both ports to your Rails"
puts "app running with webrick, mongrel, unicorn or whatever."
puts "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

pwd      = "#{`pwd`}".strip
ssl_conf = "#{pwd}/config/sslasher.conf"
args     = ARGV.join(' ')
command  = "sudo nginx -c #{ssl_conf} #{args}"

`#{command}`
